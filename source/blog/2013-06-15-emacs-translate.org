#+TITLE: Using the Emacs google-translate Package to Learn A (Human) Language
#+DATE: 2013-06-15
#+SETUPFILE: ~/src/blog-stuff/octopress/setup.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES:
#+JEKYLL_PUBLISHED: true

* Abstract

  There are lots of ways to get text into emacs. Add the
  [[https://github.com/manzyuk/google-translate][google-translate]] package from [[https://github.com/manzyuk][Oleksandr Manzyuk]] and org-mode and you
  have a really nice - and very hacker chic - system for learning new
  languages.

  #+HTML: <!-- more -->

* Introduction

* Methods

** google-translate

   The google-tranlate package is a way to use google's translation
   service from within emacs. It's basically the same thing you see
   [[http://translate.google.com/#zh-CN/en/%25E4%25BD%25A0%25E6%25A0%25B9%25E6%259C%25AC%25E7%2584%25A1%25E6%25B3%2595%25E4%25BA%2586%25E8%25A7%25A3%2520emacs%2520%25E6%259C%2589%25E5%25A4%259A%25E5%25B0%2591%25E5%258A%259F%25E8%2583%25BD%25E3%2580%2582][here]].

   To install it, simply use emacs's package facility, or
     : M-x package-install RET google-translate

   The main function we're going to use is
     : google-translate-at-point

   Executing this function interactively will prompt you for from and
   to languages, like "Chinese Traditional" and "Spanish" for example.

   google-translate is a general purpose front end for translation,
   but I know which language I want to translate to and from. I wrote
   a little wrapper function so I don't have to always type in the
   names of the languages I want to translate.

#+BEGIN_SRC emacs-lisp
(require 'google-translate)

(defvar *my-language* "English")
(defvar *learning-language* "Chinese Traditional")

(defun my-translate-at-point ()
  (interactive)
  (google-translate-translate *learning-language* *my-language*
                              (current-word t)))
#+END_SRC

   So, as an example, say I have the following text at point
     : 你好

   and I invoke
     : M-x my-translate-at-point RET

   a new buffer will pop up with the following text:

   #+BEGIN_QUOTE
   Translate from nil to nil:

   你好

   Nǐ hǎo

   Hello

   interjection
 1. hello!
 2. hi!
 3. hallo!
   #+END_QUOTE

   I think that's good enough to get us started. Bind this function
   to a handy keybinding and we're cooking with gas

     : (global-set-key (kbd "<f1>") 'my-translate-at-point)

** org-mode

   [[http://orgmode.org/][Org-mode]] is a special mode for emacs that lets you...lots of
   things. The motto of org-mode is, "Your life in plain text." You can
   use org-mode for TODO lists, agendas, just keeping notes, tracking
   you time, and too many other things to list. I personally use org
   mode for a lot of these things and am even writing this in org-mode
   and publishing it to octopress with another emacs plugin.

   For language learning, there are lots of ways we could use
   org-mode. I started out really simple.

   Org-mode has the concept of "capture." The idea is that, when you
   have an idea you want to remember or a thing you want to do related
   to where you are, capture that somewhere that you can continue
   working on it later, then get on with the main thing you were trying
   to do.

   That was kind of a tortured explanation and I hope you are still
   reading this. If you have ever been on an agile team that uses not
   cards to capture things that need to be done later, it's kind of like
   that.

   So, the simplest way to use org-mode for language learning is to use
   capture: when you are on a word you would like to drill on later
   capture it. I have this bound to "C-c c". This brings up a little
   buffer asking you what kind of think you want to capture. Of course
   this is all completely customizable - we'll get to that in a
   second. I would indicate that I wanted a new "journal entry." I would
   save the word and the definition I had looked up along with any notes
   I had then hit "C-c C-c" to save it and go back to reading.

   I was also using journal entries for other purposes and it felt
   sub-optimal to have my journal entries mixed in with vocabulary words
   I wanted to remember. So I added a new template:

#+BEGIN_SRC emacs-lisp
(defvar my-chinese-notes (expand-file-name "~/Google Drive/Notes/Chinese.org"))

(setq org-capture-templates
      '( ;; other un-important templates
        ("c" "Chinese" entry (file+headline my-chinese-notes "Vocabulary")
         "* %i\n %?\n %a")))
#+END_SRC

   So now, if I capture, hit "c" for "Chinese" I'll get a new entry with
   the word I had highlighted (the active region when I started to
   capture) in the file Chinese.org, which I happen to keep in google
   drive to make it easy to get.

   We could keep going from here and automate this a lot more, but let's
   move on to actually getting some text to translate.

** twittering-mode

   Did you know you could use twitter in emacs. You probably aren't that
   surprised even if you didn't know, since emacs can do everything.

   To tweet from emacs, install the twittering-mode package
  : M-x package-install RET twittering-mode RET

   To start twittering mode
  : M-x twittering-mode

   The first time you run twittering-mode in an emacs session, you will
   need to tell twitter.com that it's ok. You will be prompted to follow
   a link to the API authorization page on twitter.com, which will issue
   a code you can copy and paste back into emacs.

   Now you just need to follow some people that tweet in the language
   you want to learn. This should be pretty easy, but a few tips:

   - try just searching twitter for the endonym of the language you
     want to learn: like "español" if you are learning Spanish or
     "தமிழ்" if you are learning Tamil, for example.
   - I find language learning more interesting if it's not just
     language learning. I am interested in economics, so I was able
     to find some people to follow by adding "economics" or the
     target language translation of the word. When you recognize a
     high level concept you know in your language in your target for
     the first time it's a really awesome feeling.
   - If you don't want to spam your language A followers with
     your language B goings-on, consider setting up a separate
     twitter account for learning the language. I am personally too
     lazy to do that, but it might be a good idea for some people.
   - Actually talk to people on twitter. Even if you just say thanks
     or tell people that they are helping you learn their
     language. People who use ¬English on twitter skew towards the
     top of being interested in that language and will almost always
     be very happy and friendly to help you out. If they're not,
     unfollow them.

** gnus

   Emacs has a few ancient bits for reading that predate twitter. Do you
   remember USENET? You're dating yourself. While USENET still exists it's
   mostly known nowadays for it's role in copyright infringement. For
   many, like me, however, USENET was the internet before the web.

   Emacs comes with gnus, which is the mode you use for reading NNTP,
   built-in.

   ISPs in the US, like Comcast for me, used to offer NNTP (the
   protocol USENET uses: NNTP is to USENET as HTTP is to the web)
   servers that carried text newsgroups as part of their service. Alas
   those days are gone for most. If you ISP has NNTP servers
   available, by all means use them. For the rest of us, there are a
   few options to consider:

   - You can pay for NNTP access: giganews, astraweb. It will cost
     some money, but you will get solid service. They also carry
     binary newsgroups. Not that I am advocating this, but you might
     find video and audio in your target language in binary
     newsgroups which might be otherwise hard to come by.
   - You can get text newsgroups from free services like
     [[http://www.eternal-september.org/][eternal-september.org]]. This is what I do.

*** Setting up gnus

    You need to do a tiny amount of work to get gnus to work with your
    nntp choice:

#+BEGIN_SRC emacs-lisp
(setq gnus-select-method '(nntp "news.eternal-september.org"
                                (nntp-port-number 119)))
#+END_SRC

    You will be prompted for your credentials every time you starts
    gnus, or you can store your credentials in an encrypted
    ~/.authinfo file like I do. See [[http://www.emacswiki.org/emacs/GnusAuthinfo][this]], and [[http://www.emacswiki.org/emacs/GnusEncryptedAuthInfo][this]].

    To start gnus just
     : M-x gnus RET

    If you get scared by the abstract gnu graphic, just hit 'q' to
    quit. Try again when you are feeling braver.

*** Subscribing to Groups

    You should eventually see the '*Group*' buffer and something about
    no news being good news. Since you aren't subscribed to any groups
    yet, that's all you get. Type 'A A' to see all the newsgroups
    available.

    Newsgroups are (loosely) organized into hierarchies: for example
    'comp.graphics.apps.photoshop' is for talking about photoshop,
    which is an application for doing graphics stuff on computers. In
    addition to the "Big 8" hierarchies (comp.*, humanities.*, misc.*,
    news.*, rec.*, sci.*, soc.*, and talk.*) there are often country
    specific ones: japan.*, es.*, tw.*, in.* for example, for Japan,
    Spain, Taiwan, and India respectively.

    By looking in these region/language specific newsgroups, you can
    sometimes find lively interesting conversations in your target
    language.

    Just to set expectations, you often find dead groups (no posts,)
    political flame-wars in English (not target language,) or, best of
    all, horrible, filthy spam.

    Some languages seem to have really lively USENET presence, while
    others are nowhere to be seen. If you are lucky enough to be
    learning a language which is on USENET, you will have a ton of
    free interactive source text from which to learn about topics you
    are interested or viagra pills.

    If not, don't worry. There are other ways we can take advantage
    of gnus.

** gmane

   Open source software is done by mailing list, but e-mail actually
   kind of suck at this. Newsgroups are a much better format for group
   discussion than e-mail. It should come as no surprise that over the
   past several years we've seen the advent of so many things that try
   to make e-mail look more like newsgroups: folders, rules for
   processing e-mails (often with support for grouping messages,)
   tags, search, low vs. high priority inboxes, etc.

   Another approach is to transform e-mail into newsgroups. For
   example, lots of people try to use gnus to work with IMAP servers
   (like GMail.)

   However, the most direct and obvious approach is to simple make a
   newsgroup out of an e-mail list. This is exactly what Lars Magne
   Ingebrigtsen (one of the authors of gnus) and friends started doing
   in 2001. They created gmane (pronounced like "main" in english, IPA
   mān), a free mailing-list->newsgroup bridge.

   While gmane is dominated by developer/IT related discussions in
   English right now, there are quite a few non-English mailing lists
   available and you can request to have new lists added via [[http://gmane.org/subscribe.php][this
   form]]. I wouldn't be shy about this. The people that run gmane are
   very cool and the worst that can happen is they don't add the list
   you want.



   All we need to do is add gmane as a

** gwene

   Gmane is pretty cool. What about RSS?

** w3m

* Further Research

** org-drill

   From the [[http://orgmode.org/worg/org-contrib/org-drill.html][official description]]:

   #+BEGIN_QUOTE
   Org-Drill is an extension for Org mode. Org-Drill uses a spaced
   repetition algorithm to conduct interactive "drill sessions", using
   org files as sources of facts to be memorised. Each topic is
   treated as a "flash card". The material to be remembered is
   presented to the student in random order. The student rates his or
   her recall of each item, and this information is used to schedule
   the item for later revision.
   #+END_QUOTE
